1. JVM. Byte code.
	Структура файла *.java:
		package nkotkin; // должно совпадать с папкой пакета
		public class Calculate { // должно совпадать с именем файла
			public static void mine(String[] args) { // Не обязательно. Запускающий метод
			}
		}
	Компиляция:
		javac -d out src\nkotkin\Calculate.java // Скомпилировать файл Calculate.java в папку \out
	Запуск:
		java -cp out ru.nkotkin.Calculate // Запустить из папки out класс Calculate с пакетом nkotkin
		java -cp java-a-from-z-1.0.jar ru.nkotkin.Calculate // Запуск после maven
2. Тип данных.
	Примитивные (primitive)
		byte, char, int, long, float, double
	Ссылочные (reference)
		Object
3. Условный оператор
	Для сравнения ссылочных переменных (и строк):
		v1.equils(v2); // возвращает true если они одинаковые
	Тернарный оператор сравнения:
		int i = (a > b) ? 1 : 2; // Если a > b то в i запишет 1 иначе 2
	switch использовать не рекомендуется т.к. его тяжело расширять
4. Циклы
	forEach:
		for(<тип> <имя> : <массив>) {} // Взять каждый элемент типа <тип> из массива <массив>, присвоить ему имя <имя> и  сделать с ним что то
			for(String arg : args) {} // Взять из коммандной строки элемент, записать его в arg, на следующем шаге
	continue и break - это плохой стиль кода, лучше их избегать
5. Массивы
	Массив является ссылочным типом

6. Контрольные вопросы часть 1. Базовый синтаксис.
	01) Что такое виртуальная машина?
		- абстракция между ОС и нашей программой.

	02) К какому типа языка программирование относиться Java?
		- Строготипизированный ООП язык программирования.
		- Что то среднее между компилируемым и интерпретируемым языком.

	03) Из каких компонентов состоит Java?
		- JDK, JRE, VM.

	04) Для чего используется JDK?
		- Устанавливается у разработчика, необходима для написания приложений на java.

	05) Для чего используется JRE?
		- Устанавливается у клиента, состоит из собранных исходных кодов, необходима для замуска VM.

	06) Для чего используется VM?
		- Для запуска Java приложений (переводит байт-код в машинный код данного ПК).

	07) Расскажите про базовые типы.
		- Примитивные - это простые данные.
		- Ссылочные - object.

	08) Что такое примитивные типы?
		- boolean, byte, char, int, long, float, double.
		- нужы для выполнения всех арифметических операций.

	09) Что такое классы обертки?
		- специальные классы, созданные для приметивных типов данных.
		- необходимы чтобы превратить примитивный тип в ссылочный.

	10) Что такое автобоксинг и анбоксинг?
		- Integer j = 1;
		- int i = j;

	11) Как в Java передаются параметры в методы?
		- в круглых скобочках после названия метода.

	12) Почему нельзя изменить ссылку на объект в методе?
		- потому что тогда объект удалтся.

	13) Описать механизм создания байт кода.
		- javac -d <out> -cp <classpath> <file.java>

	14) Что такое оператор условия?
		- Это когда продолжение выполнения команд в программе зависит от выполнения условия

	15) Какие тепы оператор условия существуют?
		- if-else
		- switch-case
		- тернарное условие

	16) Почему нельзя сравнивать ссылочные типы по оператору ==?
		- потому что тогда сравниваются их ссылки а не значения.

	17) Почему примитивные типы можно сравнивать через оператор ==?
		- потому что тогда сравниваются их данные.

	18) Какие объекты могут быть использованы в операторе switch?
		- примитивные типы и строки

	19) Расскажите про булевы операции || && ?
		- or (выполняется либо то либу другое)
		- and (выполняется и то и другое)

	20) Что такое тернарное условие?
		- int i = (a > b) ? 1 : 2; // Если a > b то в i запишет 1 иначе 2

	21) Что такое циклы и для чего они используются?
		- Нужны для того, чтобы какой то код выполнить некоторое количество раз.

	22) Для чего используется цикл for?
		- выпонить какой то код заранее известное количесво раз.

	23) Для чего используется цикл foreach?
		- пробежаться по массиву и для каждого элемента выполнить определенный код.

	24) Для чего используется цикл while?
		- выполнить какой то код неизвестное количество раз (пока не выполнится условие)

	25) Для чего используется цикл do while?
		- сначала выполнить тело цикла а потом проверить условие.

	26) Что такое массив?
		- набор данных одного типа.

	27) Как создать массив?
		- int[] iArr = new int[10];
		- String[] sArr = {"a", "b", "c"}

	28) Как присвоить значение ячейке массива?
		- iArr[0] = 5;

	29) Как можно пройти по всем элементам массива?
		for(int i : iArr) {;}

	30) Как можно найти элемент в массиве?
		for(int i : iArr) {if(i == 5) {;}}

	31) Что будет если обратить к несуществующей ячейки массива?
		- ArrayIndexOutOfBoundsException

	32) Как удалить ячейку в массие?
		- никак. Количество ячеек в массиве изменять нельзя.

	33) Как отредактировать ячейку в массиве?
		- iArr[0] = 6;